// Code your design here
module test;
  reg clk,x1,x0;
    
wire y;
  threeM uu(x1,x0,clk,y);
initial
  begin
    $dumpfile("three.vcd");
      $dumpvars(0,test);
    clk=1'b0;
  end
always #5 clk=~clk;
initial
  begin
    #2 x1=1'b1;x0=1'b1;
    #10 x1=1'b1;x0=1'b1;
    #10 x1=1'b0;x0=1'b1;
    #10 x1=1'b1;x0=1'b1;
    #10 x1=1'b1;x0=1'b0;
    #10 x1=1'b1;x0=1'b1;
    #10 x1=1'b1;x0=1'b0;
    #10 x1=1'b1;x0=1'b0;
    #10 x1=1'b1;x0=1'b1;
    #10 x1=1'b1;x0=1'b0;
    $finish;
  end
endmodule



// Code your testbench here
// or browse Examples
module threeM (x1,x0,clk,y);
  input x1,x0,clk;
  output reg y;
  reg [0:1]state;
  parameter S0=0,S1=1;
  always @(posedge clk)
    case(state)
      S0:begin
        y <= x1?(x0?0:1):(x0?1:0);
        state<=x1?(x0?S1:S0):S0;
      end
        S1:begin
          y <= x1?(x0?1:0):(x0?0:1);
          state<=x1?S1:(x0?S1:S0);
      end
     default: state<= S0; 
    endcase
endmodule





